cabal-version:      3.0

name:               smart-contract-wallet 
version:            0.1.0.0
tested-with:        GHC == 9.6.3
synopsis:           ZkFold Smart contract wallet server 
homepage:           https://zkfold.io/
category:           REST API, Smart Contracts, Finances 
author:             Vladimir Morozov
maintainer:         vlasin@zkfold.io
license-file:       LICENSE
build-type:         Simple

description:
  This package contains the zkFold Symbolic Wallet server. 

Flag Pedantic
    Description: Enable pedantic build with -Werror
    Manual: True
    Default: False

common options
    default-language: Haskell2010
    ghc-options:
      -fwarn-redundant-constraints
      -Wall
      -Wcompat
      -Widentities
      -Wincomplete-record-updates
      -Wincomplete-uni-patterns
      -Wnoncanonical-monad-instances
      -Wpartial-fields
      -Wredundant-constraints
      -Wunused-packages
      -O2
      -threaded
    if flag(pedantic)
      ghc-options:
        -Werror
    default-extensions:
      BangPatterns,
      BinaryLiterals,
      ConstraintKinds,
      DataKinds,
      DefaultSignatures,
      DeriveDataTypeable,
      DeriveFoldable,
      DeriveFunctor,
      DeriveGeneric,
      DeriveTraversable,
      ExistentialQuantification,
      FlexibleContexts,
      FlexibleInstances,
      FunctionalDependencies,
      GADTs,
      GeneralizedNewtypeDeriving,
      InstanceSigs,
      KindSignatures,
      LambdaCase,
      MultiParamTypeClasses,
      MultiWayIf,
      NamedFieldPuns,
      NoImplicitPrelude,
      NoStarIsType,
      NumericUnderscores,
      OverloadedStrings,
      OverloadedLabels,
      PolyKinds,
      RankNTypes,
      RecordWildCards,
      ScopedTypeVariables,
      StandaloneDeriving,
      StandaloneKindSignatures,
      TupleSections,
      TypeApplications,
      TypeFamilies,
      TypeOperators,
      ViewPatterns

common options-exe
    import: options
    ghc-options:
      -rtsopts
    ghc-prof-options:
      -with-rtsopts=-pj

library
    import: options
    exposed-modules:
      ZkFold.Wallet
      ZkFold.Wallet.SymbolicAPI
      ZkFold.Wallet.Server
    other-modules:
      ZkFold.Wallet.Types
      ZkFold.Wallet.Server.Types
    build-depends:
      base                          >= 4.9 && < 5,
      aeson                                      ,
      deepseq                                    ,
      servant-server                             ,
      text                                       ,
      wai                                        ,
      warp
    hs-source-dirs: src


test-suite wallet-server-test
    import: options-exe
    type: exitcode-stdio-1.0
    ghc-options: 
        "-with-rtsopts=-A128M -AL256m -qb0 -qn4 -N"
    hs-source-dirs: test
    main-is:        Main.hs
--    other-modules:
    build-depends:
      smart-contract-wallet                      , 
      base                          >= 4.9 && < 5,
      hspec                                      ,
      servant-client                             ,
      warp                               >= 3.2.4,
      http-client                                ,
      http-types

executable symbolic-wallet-server
    import: options-exe
    type: exitcode-stdio-1.0
    ghc-options: 
        "-with-rtsopts=-A128M -AL256m -qb0 -qn4 -N"
    hs-source-dirs: app 
    main-is:        Main.hs
    build-depends:
      smart-contract-wallet                      ,
      base                          >= 4.9 && < 5,
      optparse-applicative                        
